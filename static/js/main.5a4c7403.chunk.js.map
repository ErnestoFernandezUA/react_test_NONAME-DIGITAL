{"version":3,"sources":["pages/NotFound.tsx","store/hooks.ts","store/features/Products/productsSlice.ts","assets/star-icon.svg","UI/Button.tsx","store/features/Basket/basketSlice.ts","components/Card.tsx","components/Loader.tsx","components/TitleMassage.tsx","store/sagas/sagaActions.ts","store/features/User/userSlice.ts","pages/HomePage/HomePage.tsx","hooks/use-auth.ts","pages/BasketPage/BasketPage.tsx","pages/ProductPage/ProductPage.tsx","components/Form.tsx","components/Login.tsx","pages/LoginPage/LoginPage.tsx","components/SignUp.tsx","pages/RegisterPage/RegisterPage.tsx","components/Controls.tsx","components/App.tsx","AppRouter.tsx","api/axiosClient.ts","store/sagas/getProductsSaga.ts","api/products.ts","store/sagas/sendOrderSaga.ts","store/sagas/watchSaga.ts","store/sagas/root.ts","store/features/Controls/controlsSlice.ts","store/index.ts","auth/firebase.js","index.tsx"],"names":["NotFound","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","storage","statusLoading","error","productsSlice","createSlice","name","reducers","setProducts","state","action","payload","setStatus","setError","resetState","actions","selectProducts","products","selectProductsStatusLoading","selectProductsError","Button","styled","button","totalSum","totalCount","showSuccess","statusPosting","basketSlice","addProductToBasket","count","product","productIndexInBasket","findIndex","bp","id","countOrdered","push","Math","ceil","reduce","accumulator","elem","Number","price","removeProductFromBasket","deleteProductInBasket","splice","sendOrderToServer","console","log","setShowSuccess","setStatusPosting","clearBasket","selectBasket","basket","selectTotalSum","selectTotalCount","selectShowSusses","selectStatusPosting","selectBasketError","CardContainer","div","format","css","CardImage","img","CardContent","CardCategory","CardTitle","h2","CardDescription","p","CardPrice","h3","CardRating","CardRatingCount","span","CardButtonBuy","Card","category","description","image","rating","title","dispatch","navigate","useNavigate","onClick","src","alt","StarIcon","e","stopPropagation","buyHandler","rotate","keyframes","LoaderWrapper","LoaderInner","Loader","Wrapper","status","TitleMessage","message","sagaActions","loadProducts","type","user","UserSlice","setUser","selectUser","HomePage","isAuth","email","token","useAuth","setTimeout","isLoading","isEmptyBasket","useEffect","length","map","Basket","BasketList","BasketTotal","BasketPosition","BasketPositionTitle","BasketPositionControls","BasketPositionCost","OrderButton","BasketPage","total","pos","size","round","undefined","ProductPage","useParams","find","String","Form","handleClick","useState","setEmail","password","setPassword","value","onChange","target","placeholder","Login","auth","getAuth","signInWithEmailAndPassword","then","uid","catch","errorCode","code","errorMessage","LoginPage","to","SignUp","createUserWithEmailAndPassword","RegisterPage","Controls","className","color","App","router","createBrowserRouter","path","element","errorElement","children","baseURL","instance","axios","create","client","url","get","response","data","getProductsSaga","put","delay","sendOrderSaga","select","forEach","watchSaga","takeLeading","takeEvery","rootSaga","popup","controlSlice","sagaMiddleware","createSagaMiddleware","persistConfig","key","whitelist","rootReducer","combineReducers","control","controlsSlice","userSlice","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","run","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","createRoot","document","getElementById","render","loading"],"mappings":"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","file":"static/js/main.5a4c7403.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n\nexport const NotFound: FunctionComponent = () => {\n  return (\n    <div>\n      This page doesn&nbsp;t exist.\n    </div>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Product } from '../../../type/Product';\n\nexport interface ProductsState {\n  storage: Product[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: string | null;\n}\n\nconst initialState: ProductsState = {\n  storage: [],\n  statusLoading: 'idle',\n  error: null,\n};\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setProducts: (state: ProductsState, action: PayloadAction<Product[]>) => {\n      state.storage = action.payload;\n    },\n    setStatus: (\n      state: ProductsState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      state.statusLoading = action.payload;\n    },\n    setError: (state: ProductsState, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.statusLoading = 'failed';\n    },\n    resetState: (state: ProductsState) => {\n      return { ...state, ...initialState };\n    },\n  },\n});\n\nexport default productsSlice.reducer;\nexport const {\n  setProducts,\n  setStatus,\n  setError,\n  resetState,\n} = productsSlice.actions;\n\nexport const selectProducts = (state: RootState) => state.products.storage;\nexport const selectProductsStatusLoading\n= (state: RootState) => state.products.statusLoading;\nexport const selectProductsError = (state: RootState) => state.products.error;\n","export default __webpack_public_path__ + \"static/media/star-icon.bdc56500.svg\";","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  margin: 0;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  justify-content: center;\n  cursor: pointer;\n  height: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Raleway', sans-serif;\n\n  &:hover{\n    text-decoration: underline;\n  }\n`;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { Product } from '../../../type/Product';\n\nexport type BasketPosition = {\n  product: Product;\n  countOrdered: number;\n};\n\nexport interface BasketState {\n  storage: BasketPosition[];\n  totalSum: number;\n  totalCount: number;\n  showSuccess: boolean;\n  statusPosting: 'idle' | 'posting' | 'failed';\n  error: string | null;\n}\n\nconst initialState: BasketState = {\n  storage: [],\n  totalSum: 0,\n  totalCount: 0,\n  showSuccess: false,\n  statusPosting: 'idle',\n  error: null,\n};\n\nconst basketSlice = createSlice({\n  name: 'basket',\n  initialState,\n  reducers: {\n    addProductToBasket: (\n      state: BasketState,\n      action: PayloadAction<{ product: Product; count: number }>,\n    ) => {\n      const { count, product } = action.payload;\n\n      const productIndexInBasket = state.storage\n        .findIndex(bp => bp.product.id === product.id);\n\n      if (productIndexInBasket >= 0) {\n        state.storage[productIndexInBasket].countOrdered += count;\n      } else {\n        state.storage.push({\n          product,\n          countOrdered: count,\n        });\n      }\n\n      // update total sum after all add operation\n      state.totalSum = Math.ceil(\n        state.storage.reduce((accumulator, elem) => accumulator\n        + Number(elem.product.price) * elem.countOrdered, 0) * 100,\n      ) / 100;\n\n      state.totalCount = state.storage.reduce((accumulator, elem) => accumulator\n        + elem.countOrdered, 0);\n    },\n    removeProductFromBasket: (\n      state: BasketState,\n      action: PayloadAction<{ product: Product; count: number }>,\n    ) => {\n      const { count, product } = action.payload;\n\n      const productIndexInBasket = state.storage\n        .findIndex(bp => bp.product.id === product.id);\n\n      if (productIndexInBasket >= 0\n        && state.storage[productIndexInBasket].countOrdered >= count) {\n        state.storage[productIndexInBasket].countOrdered -= count;\n\n        // update total sum after each remove operation\n        state.totalSum = Math.ceil(\n          state.storage.reduce((accumulator, elem) => accumulator\n          + Number(elem.product.price) * elem.countOrdered, 0) * 100,\n        ) / 100;\n\n        state.totalCount = state.storage.reduce(\n          (accumulator, elem) => accumulator + elem.countOrdered,\n          0,\n        );\n      }\n    },\n    deleteProductInBasket: (\n      state: BasketState,\n      action: PayloadAction<{ product: Product }>,\n    ) => {\n      const { product } = action.payload;\n\n      const productIndexInBasket = state.storage\n        .findIndex(bp => bp.product.id === product.id);\n\n      if (productIndexInBasket >= 0) {\n        state.storage.splice(productIndexInBasket, 1);\n\n        // update total sum after each delete operation\n        state.totalSum = Math.ceil(\n          state.storage.reduce((accumulator, elem) => accumulator\n          + Number(elem.product.price) * elem.countOrdered, 0) * 100,\n        ) / 100;\n\n        state.totalCount = state.storage.reduce(\n          (accumulator, elem) => accumulator + elem.countOrdered,\n          0,\n        );\n      }\n    },\n    sendOrderToServer: () => {\n      // add empty actions for saga watchers\n\n      // eslint-disable-next-line no-console\n      console.log('sendOrderToServer');\n    },\n    setShowSuccess: (state, action: PayloadAction<boolean>) => {\n      state.showSuccess = action.payload;\n    },\n    setStatusPosting: (\n      state: BasketState,\n      action: PayloadAction<'idle' | 'posting' | 'failed'>,\n    ) => {\n      state.statusPosting = action.payload;\n    },\n    setError: (state: BasketState, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.statusPosting = 'failed';\n    },\n    clearBasket: () => {\n      return initialState;\n    },\n  },\n});\n\nexport default basketSlice.reducer;\nexport const {\n  addProductToBasket,\n  removeProductFromBasket,\n  deleteProductInBasket,\n  sendOrderToServer,\n  setShowSuccess,\n  setStatusPosting,\n  setError,\n  clearBasket,\n} = basketSlice.actions;\n\nexport const selectBasket = (state: RootState) => state.basket.storage;\nexport const selectTotalSum = (state: RootState) => state.basket.totalSum;\nexport const selectTotalCount = (state: RootState) => state.basket.totalCount;\nexport const selectShowSusses = (state: RootState) => state.basket.showSuccess;\nexport const selectStatusPosting\n= (state: RootState) => state.basket.statusPosting;\nexport const selectBasketError\n= (state: RootState) => state.basket.error;\n","import { FunctionComponent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\n\nimport { Product } from '../type/Product';\nimport StarIcon from '../assets/star-icon.svg';\nimport { Button } from '../UI/Button';\nimport { useAppDispatch } from '../store/hooks';\nimport { addProductToBasket } from '../store/features/Basket/basketSlice';\n\nconst CardContainer = styled.div<{ format?: string }>`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 280px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  margin: 10px;\n  box-sizing: border-box;\n  padding: 0 0 20px;\n\n  &:hover {\n    cursor: pointer;\n    ${({ format }) => (format === 'page') && css`\n    cursor: auto;\n  `}\n  }\n\n  ${({ format }) => (format === 'page') && css`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    border-radius: none;\n    box-shadow: none;\n    overflow: visible;\n    margin: 0;\n    padding: 0;\n  `}\n`;\n\nconst CardImage = styled.img<{ format?: string }>`\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n  overflow: hidden;\n\n  ${({ format }) => (format === 'page') && css`\n    width: 300px;\n    height: 400px;\n    object-fit: cover;\n    overflow: visible;\n    margin: 0 auto;\n  `}\n`;\n\nconst CardContent = styled.div<{ format?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n\n  ${({ format }) => (format === 'page') && css`\n    padding: 50px;\n  `}\n`;\n\nconst CardCategory = styled.div<{ format?: string }>`\n  font-size: 12px;\n  padding: 0;\n\n  ${({ format }) => (format === 'page') && css`\n    font-size: 20px;\n    padding: 10px;\n  `}\n`;\n\nconst CardTitle = styled.h2<{ format?: string }>`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  max-width: 250px;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  overflow-wrap: normal;\n  height: 48px;\n\n  ${({ format }) => (format === 'page') && css`\n    font-size: 50px;\n    margin-top: 20px;\n    margin-bottom: 40px;\n    max-width: none;\n    -webkit-line-clamp: inherit;\n    text-align: center;\n    overflow: visible;\n    text-overflow: none;\n    height: auto;\n  `}\n`;\n\nconst CardDescription = styled.p<{ format?: string }>`\n  font-size: 14px;\n  text-align: center;\n  max-height: 50px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  overflow-wrap: break-word;\n\n  ${({ format }) => (format === 'page') && css`\n    font-size: 24px;\n    text-align: center;\n    max-height: min-content;\n    text-overflow: clip;\n    overflow: visible;\n    -webkit-line-clamp: inherit;\n  `}\n`;\n\nconst CardPrice = styled.h3<{ format?: string }>`\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 10px;\n\n  ${({ format }) => (format === 'page') && css`\n    font-size: 34px;\n    font-weight: bold;\n    margin-top: 20px;\n  `}\n`;\n\nconst CardRating = styled.div<{ format?: string }>`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n\n  ${({ format }) => (format === 'page') && css`\n  `}\n`;\n\nconst CardRatingCount = styled.span<{ format?: string }>`\n  font-size: 14px;\n  margin-left: 5px;\n`;\n\nconst CardButtonBuy = styled(Button)<{ format?: string }>`\n  ${({ format }) => (format === 'page') && css`\n    font-size: 30px;\n    margin: 20px auto;\n  `}\n`;\n\ninterface CardProps {\n  product: Product;\n  // eslint-disable-next-line react/require-default-props\n  format?: 'card' | 'page';\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  product,\n  format = 'card',\n}) => {\n  const {\n    category, description, image, price, rating, title, id,\n  } = product;\n  const { count } = rating;\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const buyHandler = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    dispatch(addProductToBasket({\n      product,\n      count: 1,\n    }));\n  };\n\n  const cardToggle = () => {\n    if (format === 'card') {\n      navigate(`product/${id}`);\n    }\n  };\n\n  return (\n    <CardContainer\n      onClick={cardToggle}\n      format={format}\n    >\n      <CardImage src={image} alt={description} format={format} />\n      <CardContent format={format}>\n        <CardCategory format={format}>{category}</CardCategory>\n        <CardTitle format={format}>{title}</CardTitle>\n        <CardDescription format={format}>{description}</CardDescription>\n        <CardPrice format={format}>\n          $\n          {price}\n        </CardPrice>\n        <CardRating format={format}>\n          <img src={StarIcon} alt=\"star icon\" />\n          <CardRatingCount format={format}>{`${count} available`}</CardRatingCount>\n        </CardRating>\n\n      </CardContent>\n      <CardButtonBuy onClick={e => buyHandler(e)} format={format}>\n        Add\n      </CardButtonBuy>\n    </CardContainer>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoaderInner = styled.div`\n  border-radius: 50%;\n  width: 2em;\n  height: 2em;\n  margin: 1em auto;\n  border: 0.3em solid #ddd;\n  border-left-color: #000;\n  animation: ${rotate} 1.2s infinite linear;\n`;\n\nexport const Loader: FunctionComponent = () => {\n  // eslint-disable-next-line no-console\n  console.log('Loader ....');\n\n  return (\n    <LoaderWrapper>\n      <LoaderInner />\n    </LoaderWrapper>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport const Wrapper = styled.div<{ status: string }>`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  ${({ status }) => (status === 'error') && css`\n    color: red;\n  `}\n`;\n\ninterface Props {\n  message: string;\n  status: 'error' | 'casual' | undefined;\n}\n\nexport const TitleMessage: FunctionComponent<Props> = ({\n  message,\n  status = 'casual',\n}) => {\n  return (\n    <Wrapper status={status}>\n      <h2>{message}</h2>\n    </Wrapper>\n  );\n};\n","// create saga actions ONLY\nexport const sagaActions = {\n  FETCH_PRODUCTS_DATA: 'saga/FETCH_PRODUCTS_DATA',\n  FETCH_ORDER_TO_SERVER: 'saga/FETCH_ORDER_TO_SERVER',\n};\n\nconst sagaActionsCreator = {\n  loadProducts: () => ({ type: sagaActions.FETCH_PRODUCTS_DATA }),\n  sendOrder: () => ({ type: sagaActions.FETCH_ORDER_TO_SERVER }),\n};\n\nexport const {\n  loadProducts,\n  sendOrder,\n} = sagaActionsCreator;\n","import {\n  createSlice,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../..';\nimport { User } from '../../../type/User';\n\nexport interface UserState {\n  user: User | null;\n}\n\nconst initialState: UserState = {\n  user: null,\n};\n\nconst UserSlice = createSlice({\n  name: 'User',\n  initialState,\n  reducers: {\n    setUser: (state: UserState, action) => {\n      // eslint-disable-next-line no-param-reassign\n      state.user = action.payload;\n    },\n    resetState: () => {\n      return initialState;\n    },\n  },\n});\n\nexport default UserSlice.reducer;\nexport const {\n  setUser,\n  resetState,\n} = UserSlice.actions;\n\nexport const selectUser = (state: RootState) => state.user.user;\n","import { FunctionComponent, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../store/hooks';\nimport {\n  selectProducts,\n  selectProductsError,\n  selectProductsStatusLoading,\n} from '../../store/features/Products/productsSlice';\nimport { Card } from '../../components/Card';\nimport { Product } from '../../type/Product';\nimport { Loader } from '../../components/Loader';\nimport { TitleMessage } from '../../components/TitleMassage';\nimport { selectTotalCount } from '../../store/features/Basket/basketSlice';\nimport { loadProducts } from '../../store/sagas/sagaActions';\nimport { useAuth } from '../../hooks/use-auth';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(300px, 1fr));\n  gap: 20px;\n  justify-items: center;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const HomePage: FunctionComponent = () => {\n  const { isAuth, email } = useAuth();\n  const navigate = useNavigate();\n\n  if (!isAuth) {\n    setTimeout(() => {\n      navigate('/login');\n    }, 2000);\n  }\n\n  const dispatch = useAppDispatch();\n  const products = useAppSelector(selectProducts);\n  const isLoading = useAppSelector(selectProductsStatusLoading) === 'loading';\n  const error = useAppSelector(selectProductsError);\n  const isEmptyBasket = useAppSelector(selectTotalCount) === 0;\n\n  useEffect(() => {\n    // use button 'Load Products' for start load saga\n    // but after sent order products will not reloading\n    // and will run default reload if basket is not empty\n    // in normal commercial we reload data after each routing on page\n    if (!isEmptyBasket && !products.length) {\n      dispatch(loadProducts());\n    }\n  }, []);\n\n  if (error) {\n    return <TitleMessage message={error} status=\"error\" />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <Wrapper>\n      <h2>Homepage</h2>\n      <h2>{email ? `Welcome ${email}` : 'You are not autorized'}</h2>\n\n      {products.length > 0 && products.map((product: Product) => (\n        <Card\n          key={product.id}\n          product={product}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n","import { selectUser } from '../store/features/User/userSlice';\nimport { useAppSelector } from '../store/hooks';\nimport { User } from '../type/User';\n\nexport const useAuth = () => {\n  const user: User | null = useAppSelector(selectUser);\n\n  if (!user) {\n    return {\n      isAuth: null,\n      email: null,\n      token: null,\n      id: null,\n    };\n  }\n\n  return {\n    isAuth: !!user.email,\n    ...user,\n  };\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { IoRemove, IoAdd, IoTrash } from 'react-icons/io5';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../store/hooks';\n\nimport {\n  addProductToBasket,\n  clearBasket,\n  deleteProductInBasket,\n  removeProductFromBasket,\n  selectBasket,\n  selectBasketError,\n  selectShowSusses,\n  selectStatusPosting,\n  selectTotalSum,\n  sendOrderToServer,\n} from '../../store/features/Basket/basketSlice';\nimport { Button } from '../../UI/Button';\nimport { Product } from '../../type/Product';\nimport { TitleMessage } from '../../components/TitleMassage';\nimport { Loader } from '../../components/Loader';\n\nconst Basket = styled.div`\n  & h2 {\n    text-align: center;\n  }\n`;\n\nconst BasketList = styled.div`\n  border-bottom: 1px solid black;\n`;\n\nconst BasketTotal = styled.div`\n  padding: 10px 0;\n  border-bottom: 1px solid black;\n  text-align: right;\n`;\n\nconst BasketPosition = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst BasketPositionTitle = styled.div`\n  width: 500px;\n\n  & > button {\n    text-align: left;\n  }\n`;\n\nconst BasketPositionControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst BasketPositionCost = styled.div`\n  margin-left: 30px;\n  width: 100px;\n  text-align: right;\n`;\n\nconst OrderButton = styled(Button)`\n  margin: 100px auto;\n  font-size: 30px;\n`;\n\nexport const BasketPage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const basket = useAppSelector(selectBasket);\n  const total = useAppSelector(selectTotalSum);\n  const isLoading = useAppSelector(selectStatusPosting) === 'posting';\n  const error = useAppSelector(selectBasketError);\n  const showSuccess = useAppSelector(selectShowSusses);\n  const navigate = useNavigate();\n\n  // there we watch for showSuccess from state.basket\n  // if response of order to server is success\n  // we show success message\n  // and after 3s clear basket and redirect to route homepage\n  useEffect(() => {\n    if (showSuccess) {\n      setTimeout(() => {\n        dispatch(clearBasket());\n        navigate('/');\n      }, 3000);\n    }\n  }, [showSuccess]);\n\n  const addHandler = (product: Product) => {\n    dispatch(addProductToBasket({ product, count: 1 }));\n  };\n\n  const removeHandler = (product: Product, count: number) => {\n    // delete position for the only one\n    if (count === 1) {\n      dispatch(deleteProductInBasket({ product }));\n\n      return;\n    }\n\n    dispatch(removeProductFromBasket({ product, count: 1 }));\n  };\n\n  const deleteHandler = (product: Product) => {\n    dispatch(deleteProductInBasket({ product }));\n  };\n\n  if (error) {\n    return <TitleMessage message={error} status=\"error\" />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (showSuccess) {\n    return <TitleMessage message=\"Order sent\" status=\"casual\" />;\n  }\n\n  return (\n    <div>\n      {basket.length ? (\n        <Basket>\n          <BasketList>\n            {basket.map(pos => (\n              <BasketPosition key={pos.product.id}>\n                <BasketPositionTitle>\n                  <Button onClick={() => navigate(`/product/${pos.product.id}`)}>\n                    {pos.product.title}\n                  </Button>\n                </BasketPositionTitle>\n\n                <BasketPositionControls>\n                  <Button\n                    onClick={() => removeHandler(pos.product, pos.countOrdered)}\n                  >\n                    <IoRemove size=\"2rem\" />\n                  </Button>\n\n                  {pos.countOrdered}\n\n                  <Button onClick={() => addHandler(pos.product)}>\n                    <IoAdd size=\"2rem\" />\n                  </Button>\n                  <Button onClick={() => deleteHandler(pos.product)}>\n                    <IoTrash size=\"2rem\" />\n                  </Button>\n\n                  <BasketPositionCost>\n                    {`$${Math.round(pos.countOrdered * (+pos.product.price) * 100) / 100}`}\n                  </BasketPositionCost>\n                </BasketPositionControls>\n              </BasketPosition>\n            ))}\n          </BasketList>\n          <BasketTotal>\n            Total:&nbsp;&nbsp;&nbsp;$\n            {total}\n          </BasketTotal>\n\n          <OrderButton onClick={() => dispatch(sendOrderToServer())}>\n            Order\n          </OrderButton>\n        </Basket>\n      ) : (\n        <TitleMessage message=\"Basket is empty\" status={undefined} />\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  useAppSelector,\n} from '../../store/hooks';\nimport {\n  selectProducts,\n} from '../../store/features/Products/productsSlice';\nimport { Card } from '../../components/Card';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  grid-template-columns: repeat(4, minmax(400px, 1fr));\n  gap: 20px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const ProductPage: FunctionComponent = () => {\n  const { id } = useParams();\n  const products = useAppSelector(selectProducts);\n  const product = products.find(p => String(p.id) === id);\n\n  return (\n    <Wrapper>\n      {product && <Card product={product} format=\"page\" />}\n    </Wrapper>\n  );\n};\n","import { FC, useState } from 'react';\n\ninterface FormProps {\n  title: string,\n  handleClick: (email: string, password: string) => void;\n}\n\nexport const Form: FC<FormProps> = ({ title, handleClick }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        placeholder=\"email\"\n      />\n\n      <input\n        type=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        placeholder=\"password\"\n      />\n\n      <button\n        type=\"submit\"\n        onClick={() => handleClick(email, password)}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\n\nimport { useAppDispatch } from '../store/hooks';\nimport { Form } from './Form';\nimport { setUser } from '../store/features/User/userSlice';\n\nexport const Login = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = (email: string, password: string) => {\n    const auth = getAuth();\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        dispatch(setUser({\n          email: user.email,\n          id: user.uid,\n          // token: user.accessToken,\n        }));\n\n        // dispatch(setUser(user));\n        navigate('/');\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n\n        // eslint-disable-next-line no-console\n        console.error(errorCode, errorMessage);\n      });\n  };\n\n  return (\n    <div>\n      <Form\n        title=\"sign in\"\n        handleClick={handleLogin}\n      />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Login } from '../../components/Login';\n\nexport const LoginPage: FunctionComponent = () => {\n  return (\n    <div>\n      <h2>LoginPage</h2>\n      <Login />\n\n      or&nbsp;\n      <Link to=\"/register\">\n        Register\n      </Link>\n    </div>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  // UserCredential,\n} from 'firebase/auth';\n\nimport { Form } from './Form';\nimport { useAppDispatch } from '../store/hooks';\nimport { setUser } from '../store/features/User/userSlice';\n\nexport const SignUp = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const handleRegister = (email: string, password: string) => {\n    const auth = getAuth();\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(({ user }) => {\n        // const { user } = userCredential;\n\n        // eslint-disable-next-line no-console\n        console.log(user);\n\n        dispatch(setUser({\n          email: user.email,\n          id: user.uid,\n          // token: user.accessToken,\n        }));\n\n        navigate('/');\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n\n        // eslint-disable-next-line no-console\n        console.error(errorCode, errorMessage);\n      });\n  };\n\n  return (\n    <div>\n      <Form\n        title=\"Register\"\n        handleClick={handleRegister}\n      />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SignUp } from '../../components/SignUp';\n\nexport const RegisterPage: FunctionComponent = () => {\n  return (\n    <div>\n      <h2>RegisterPage</h2>\n      <SignUp />\n\n      or&nbsp;\n      <Link to=\"/Login\">\n        Login\n      </Link>\n    </div>\n  );\n};\n","import {\n  FunctionComponent,\n} from 'react';\nimport { Link } from 'react-router-dom';\n// import styled from 'styled-components';\nimport { IoCart, IoCartOutline, IoChevronBack } from 'react-icons/io5';\nimport {\n  clearBasket,\n  selectBasket,\n  selectTotalCount,\n} from '../store/features/Basket/basketSlice';\nimport { Button } from '../UI/Button';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../store/hooks';\nimport {\n  selectProducts,\n} from '../store/features/Products/productsSlice';\nimport { loadProducts } from '../store/sagas/sagaActions';\n\n// const Wrapper = styled.div`\n//   margin: 0 auto;\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   padding: 10px;\n// `;\n\nexport const Controls: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const basket = useAppSelector(selectBasket);\n  const products = useAppSelector(selectProducts);\n  const count = useAppSelector(selectTotalCount);\n\n  return (\n    <>\n      <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/register\">\n          Register\n        </Link>\n\n        <Link to=\"/login\">\n          Login\n        </Link>\n\n        <Link to=\"/\">\n          <IoChevronBack />\n        </Link>\n\n        {!products.length && (\n          <Button onClick={() => dispatch(loadProducts())}>\n            Load products\n          </Button>\n        )}\n\n        {!!basket.length && (\n          <>\n            <Button onClick={() => dispatch(clearBasket())}>\n              Clear basket\n            </Button>\n            Total:\n            {count}\n          </>\n        )}\n\n        <Link to=\"basket\">\n          {basket.length ? (\n            <IoCart size=\"2rem\" color=\"black\" />\n          ) : (\n            <IoCartOutline size=\"2rem\" color=\"grey\" />\n          )}\n        </Link>\n      </div>\n\n      {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Navbar\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"/navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">\n                Home\n                <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/\">\n                Features\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/\">\n                Pricing\n              </a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"/\"\n                id=\"navbarDropdownMenuLink\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Dropdown link\n              </a>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                <a className=\"dropdown-item\" href=\"/\">\n                  Action\n                </a>\n                <a className=\"dropdown-item\" href=\"/\">\n                  Another action\n                </a>\n                <a className=\"dropdown-item\" href=\"/\">\n                  Something else here\n                </a>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav> */}\n    </>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Controls } from './Controls';\n\nexport function App() {\n  return (\n    <div className=\"container-fluid\">\n      <Controls />\n\n      <header>\n        <h1>Test NONAME DIGITAL</h1>\n        <p>CRM для пасажирських перевезень</p>\n      </header>\n\n      {/* <AuthProvider /> */}\n\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n","import { createBrowserRouter } from 'react-router-dom';\n\nimport { NotFound } from './pages/NotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { BasketPage } from './pages/BasketPage';\nimport { ProductPage } from './pages/ProductPage';\nimport { LoginPage } from './pages/LoginPage';\nimport { RegisterPage } from './pages/RegisterPage';\nimport { App } from './components/App';\n\nexport const router = createBrowserRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    id: 'root',\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n        id: 'homePage',\n        errorElement: <>Error on HomePage</>,\n      },\n      {\n        path: '/login',\n        element: <LoginPage />,\n        id: 'login',\n        errorElement: <>Error on Login</>,\n      },\n      {\n        path: '/register',\n        element: <RegisterPage />,\n        id: 'register',\n        errorElement: <>Error on Register</>,\n      },\n      {\n        path: '/basket',\n        element: <BasketPage />,\n        id: 'basketPage',\n        errorElement: <>Error on BasketPage</>,\n      },\n      {\n        path: '/product/:id',\n        element: <ProductPage />,\n        errorElement: <>Error on ProductPage</>,\n      },\n    ],\n  },\n]);\n","import axios from 'axios';\n\nconst baseURL = 'https://fakestoreapi.com/products';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('get', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","/* eslint-disable import/no-cycle */\nimport { AxiosError } from 'axios';\nimport { put, delay } from 'redux-saga/effects';\nimport { getAllProducts } from '../../api/products';\nimport { Product } from '../../type/Product';\nimport {\n  setError,\n  setProducts,\n  setStatus,\n} from '../features/Products/productsSlice';\n\nexport function* getProductsSaga() {\n  // eslint-disable-next-line no-console\n  console.log('getProductsSaga');\n  yield put(setStatus('loading'));\n\n  try {\n    yield delay(3000);\n    const response: Product[] = yield getAllProducts();\n\n    // eslint-disable-next-line no-console\n    console.log(response);\n\n    yield put(setProducts(response));\n  } catch (error: unknown) {\n    yield put(setError((error as AxiosError).message));\n  } finally {\n    yield put(setStatus('idle'));\n  }\n}\n","import { client } from './axiosClient';\n\nexport const getAllProducts = () => client.get<[]>('/');\n// export const getAllCategories = () => client.get<[]>('/categories');\n// export const getCategory = (category: string) => client.get<[]>(`/categories/${category}`);\n","/* eslint-disable import/no-cycle */\nimport { put, delay, select } from 'redux-saga/effects';\nimport { AxiosError } from 'axios';\nimport {\n  BasketPosition,\n  setError,\n  setShowSuccess,\n  setStatusPosting,\n} from '../features/Basket/basketSlice';\nimport { RootState } from '..';\n\nexport function* sendOrderSaga(): Generator<unknown, void, BasketPosition[]> {\n  // eslint-disable-next-line no-console\n  console.log('sendOrderSaga');\n\n  // set loader status 'true'\n  yield put(setStatusPosting('posting'));\n\n  try {\n    yield delay(5000); // it's sagas effect for delay\n\n    // show order in console not prepared object\n    const basket = yield select((state: RootState) => state.basket.storage);\n\n    // eslint-disable-next-line no-console\n    console.log('Your order is:');\n    basket.forEach((e: BasketPosition) => {\n      // eslint-disable-next-line no-console\n      console.log(e.product.title, e.countOrdered);\n    });\n\n    const total = yield select((state: RootState) => state.basket.totalSum);\n\n    // eslint-disable-next-line no-console\n    console.log('Your total sum is:', total);\n\n    // there should to axios post with token + prepared data of basket\n    yield put(setShowSuccess(true)); // it's emulate response from server\n  } catch (error: unknown) {\n    yield put(setError((error as AxiosError).message));\n  } finally {\n    yield put(setStatusPosting('idle'));\n  }\n}\n","/* eslint-disable import/no-cycle */\nimport { takeLeading, takeEvery } from 'redux-saga/effects';\n// import { sendOrderToServer } from '../features/Basket/basketSlice';\n// import { loadProducts } from '../features/Products/productsSlice';\nimport { getProductsSaga } from './getProductsSaga';\nimport { sagaActions } from './sagaActions';\nimport { sendOrderSaga } from './sendOrderSaga';\n\nexport function* watchSaga() {\n  // eslint-disable-next-line no-console\n  console.log('watchSaga');\n\n  // send only first response\n  // but we can add pagination for each response\n  yield takeLeading(sagaActions.FETCH_PRODUCTS_DATA, getProductsSaga);\n\n  // run sendOrder every time\n  yield takeEvery(sagaActions.FETCH_ORDER_TO_SERVER, sendOrderSaga);\n}\n","/* eslint-disable import/no-cycle */\nimport { watchSaga } from './watchSaga';\n\nexport default function* rootSaga() {\n  // eslint-disable-next-line no-console\n  console.log('root saga');\n\n  yield watchSaga();\n}\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-param-reassign */\nimport {\n  createSlice,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\n\nexport interface ControlState {\n  // I use this state to control global UI\n  popup: {\n    // like this\n    // showPopup1: boolean;\n    // showPopup2: boolean;\n  },\n}\n\nconst initialState: ControlState = {\n  popup: {\n  },\n};\n\nconst controlSlice = createSlice({\n  name: 'controls',\n  initialState,\n  reducers: {\n    resetState: () => {\n      return initialState;\n    },\n  },\n});\n\nexport default controlSlice.reducer;\nexport const {\n  resetState,\n} = controlSlice.actions;\n","/* eslint-disable import/no-cycle */\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport storage from 'redux-persist/lib/storage';\nimport rootSaga from './sagas/root';\nimport controlsSlice from './features/Controls/controlsSlice';\nimport productsSlice from './features/Products/productsSlice';\nimport basketSlice from './features/Basket/basketSlice';\nimport userSlice from './features/User/userSlice';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\n    'basket',\n    // 'products', // don't save products state in local storage\n  ],\n  // blacklist: ['interval'],\n};\n\nconst rootReducer = combineReducers({\n  control: controlsSlice,\n  products: productsSlice,\n  basket: basketSlice,\n  user: userSlice,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\n        // 'posts',\n      ],\n    },\n  }).concat(sagaMiddleware),\n});\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { initializeApp } from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\n","import ReactDOM from 'react-dom/client';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from './AppRouter';\nimport { store, persistor } from './store';\n\nimport './auth/firebase';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <RouterProvider router={router} />\n    </PersistGate>\n  </Provider>,\n);\n"],"sourceRoot":""}